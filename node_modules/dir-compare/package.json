{
  "_args": [
    [
      {
        "raw": "dir-compare@^1.0.1",
        "scope": null,
        "escapedName": "dir-compare",
        "name": "dir-compare",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/Users/karosli/Documents/work/leke/h5code/bundle-tool"
    ]
  ],
  "_from": "dir-compare@>=1.0.1 <2.0.0",
  "_id": "dir-compare@1.4.0",
  "_inCache": true,
  "_location": "/dir-compare",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/dir-compare-1.4.0.tgz_1491364974770_0.09905866510234773"
  },
  "_npmUser": {
    "name": "gliviu",
    "email": "grigoresculiviu@gmail.com"
  },
  "_npmVersion": "1.4.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dir-compare@^1.0.1",
    "scope": null,
    "escapedName": "dir-compare",
    "name": "dir-compare",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/dir-compare/-/dir-compare-1.4.0.tgz",
  "_shasum": "afa00ab99c0fb1c412b48dc65e8f4378d257f006",
  "_shrinkwrap": null,
  "_spec": "dir-compare@^1.0.1",
  "_where": "/Users/karosli/Documents/work/leke/h5code/bundle-tool",
  "author": {
    "name": "Liviu Grigorescu"
  },
  "bin": {
    "dircompare": "dircompare.js"
  },
  "bugs": {
    "url": "https://github.com/gliviu/dir-compare/issues"
  },
  "dependencies": {
    "bluebird": "3.4.1",
    "buffer-equal": "1.0.0",
    "colors": "1.0.3",
    "commander": "2.9.0",
    "minimatch": "3.0.2"
  },
  "description": "Node JS directory compare",
  "devDependencies": {
    "istanbul": "0.4.4",
    "memory-streams": "0.1.0",
    "shelljs": "0.3.0",
    "tar-fs": "1.13.0",
    "temp": "0.8.1"
  },
  "directories": {},
  "dist": {
    "shasum": "afa00ab99c0fb1c412b48dc65e8f4378d257f006",
    "tarball": "https://registry.npmjs.org/dir-compare/-/dir-compare-1.4.0.tgz"
  },
  "gitHead": "83a37aeddbb1e0c209d897fa4b28eff1bdd26aec",
  "homepage": "https://github.com/gliviu/dir-compare#readme",
  "keywords": [
    "compare",
    "directory",
    "folder"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "gliviu",
      "email": "grigoresculiviu@gmail.com"
    }
  ],
  "name": "dir-compare",
  "optionalDependencies": {},
  "readme": "dir-compare\n==========\nNode JS directory compare\n\n## Installation\n```shell\n$ npm install dir-compare\n```\nor\n```shell\n$ npm install dir-compare -g\n```\nfor command line utility.\n\n## Library usage\nSynchronous mode:\n```javascript\nvar dircompare = require('dir-compare');\nvar options = {compareSize: true};\nvar path1 = '...';\nvar path2 = '...';\nvar res = dircompare.compareSync(path1, path2, options);\nconsole.log('equal: ' + res.equal);\nconsole.log('distinct: ' + res.distinct);\nconsole.log('left: ' + res.left);\nconsole.log('right: ' + res.right);\nconsole.log('differences: ' + res.differences);\nconsole.log('same: ' + res.same);\nvar format = require('util').format;\nres.diffSet.forEach(function (entry) {\n    var state = {\n        'equal' : '==',\n        'left' : '->',\n        'right' : '<-',\n        'distinct' : '<>'\n    }[entry.state];\n    var name1 = entry.name1 ? entry.name1 : '';\n    var name2 = entry.name2 ? entry.name2 : '';\n\n    console.log(format('%s(%s)%s%s(%s)', name1, entry.type1, state, name2, entry.type2));\n});\n```\nAsynchronous:\n```javascript\nvar dircompare = require('dir-compare');\nvar options = {compareSize: true};\nvar path1 = '...';\nvar path2 = '...';\ndircompare.compare(path1, path2, options).then(function(res){\n    console.log('equal: ' + res.equal);\n    console.log('distinct: ' + res.distinct);\n    console.log('left: ' + res.left);\n    console.log('right: ' + res.right);\n    console.log('differences: ' + res.differences);\n    console.log('same: ' + res.same);\n    var format = require('util').format;\n    res.diffSet.forEach(function (entry) {\n        var state = {\n            'equal' : '==',\n            'left' : '->',\n            'right' : '<-',\n            'distinct' : '<>'\n        }[entry.state];\n        var name1 = entry.name1 ? entry.name1 : '';\n        var name2 = entry.name2 ? entry.name2 : '';\n\n        console.log(format('%s(%s)%s%s(%s)', name1, entry.type1, state, name2, entry.type2));\n    });    \n}).catch(function(error){\n    console.error(error);\n})\n```\n\nOptions:\n\n* compareSize: true/false - Compares files by size. Defaults to 'false'.\n* compareDate: true/false - Compares files by date of modification (stat.mtime). Defaults to 'false'.\n* dateTolerance: milliseconds - Two files are considered to have the same date if the difference between their modification dates fits within date tolerance. Defaults to 1000 ms.\n* compareContent: true/false - Compares files by content. Defaults to 'false'.\n* skipSubdirs: true/false - Skips sub directories. Defaults to 'false'.\n* skipSymlinks: true/false - Ignore symbolic links. Defaults to 'false'.\n* ignoreCase: true/false - Ignores case when comparing names. Defaults to 'false'.\n* noDiffSet: true/false - Toggles presence of diffSet in output. If true, only statistics are provided. Use this when comparing large number of files to avoid out of memory situations. Defaults to 'false'.\n* includeFilter: File name filter. Comma separated [minimatch](https://www.npmjs.com/package/minimatch) patterns.\n* excludeFilter: File/directory name exclude filter. Comma separated [minimatch](https://www.npmjs.com/package/minimatch) patterns.\n* resultBuilder: Callback for constructing result -  function (entry1, entry2, state, level, relativePath, options, statistics, diffSet). Called for each compared entry pair. Updates 'statistics' and 'diffSet'. Example [here](https://raw.githubusercontent.com/gliviu/dir-compare/master/defaultResultBuilderCallback.js)\n\nResult:\n\n* distinct: number of distinct entries\n* equal: number of equal entries\n* left: number of entries only in path1\n* right: number of entries only in path2\n* differences: total number of differences (distinct+left+right)\n* distinctFiles: number of distinct files\n* equalFiles: number of equal files\n* leftFiles: number of files only in path1\n* rightFiles: number of files only in path2\n* differencesFiles: total number of different files (distinctFiles+leftFiles+rightFiles)\n* distinctDirs: number of distinct directories\n* equalDirs: number of equal directories\n* leftDirs: number of directories only in path1\n* rightDirs: number of directories only in path2\n* differencesDirs: total number of different directories (distinctDirs+leftDirs+rightDirs)\n* same: true if directories are identical\n* diffSet - List of changes (present if Options.noDiffSet is false)\n    * path1: absolute path not including file/directory name,\n    * path2: absolute path not including file/directory name,\n    * relativePath: common path relative to root,\n    * name1: file/directory name\n    * name2: file/directory name\n    * state: one of equal, left, right, distinct,\n    * type1: one of missing, file, directory\n    * type2: one of missing, file, directory\n    * size1: file size\n    * size2: file size\n    * date1: modification date (stat.mtime)\n    * date2: modification date (stat.mtime)\n    * level: depth\n\n\n## Command line\n```\n  Usage: dircompare [options] leftdir rightdir\n\n  Options:\n\n    -h, --help               output usage information\n    -V, --version            output the version number\n    -c, --compare-content    compare files by content\n    -D, --compare-date       compare files by date\n    --date-tolerance [type]  tolerance to be used in date comparison (milliseconds)\n    -f, --filter [type]      file name filter\n    -x, --exclude [type]     file/directory name exclude filter\n    -S, --skip-subdirs       do not recurse into subdirectories\n    -L, --skip-symlinks      ignore symlinks\n    -i, --ignore-case        ignores case when comparing file names\n    -l, --show-left          report - show entries occurring in leftdir\n    -r, --show-right         report - show entries occurring in rightdir\n    -e, --show-equal         report - show identic entries occuring in both dirs\n    -d, --show-distinct      report - show distinct entries occuring in both dirs\n    -a, --show-all           report - show all entries\n    -w, --whole-report       report - include directories in detailed report\n    --csv                    report - print details as csv\n    --nocolors               don't use console colors\n    --async                  Make use of multiple cores\n\n  By default files are compared by size.\n  --date-tolerance defaults to 1000 ms. Two files are considered to have\n  the same date if the difference between their modification dates fits\n  within date tolerance.\n\n  Exit codes:\n    0 - entries are identical\n    1 - entries are different\n    2 - error occurred\n\n  Examples:\n  compare by content         dircompare -c dir1 dir2\n  exclude filter             dircompare -x .git dir1 dir2\n  include filter             dircompare -f *.js,*.yml dir1 dir2\n  show only different files  dircompare -d dir1 dir2\n```\n\n## Changelog\n* v1.3.0\n\t* added date tolerance option\n* v1.2.0\n\t* added compare by date option\n* v1.1.0\n    * detect symlink loops\n    * improved color scheme for command line utility\n* v1.0.0\n    * asynchronous processing\n    * new library options: noDiffSet, resultBuilder\n    * new statistics: distinctFiles, equalFiles, leftFiles, rightFiles, distinctDirs, equalDirs, leftDirs, rightDirs\n    * new --async command line option\n    * Fix for https://github.com/tj/commander.js/issues/125\n* v0.0.3 Fix fille ordering issue for newer node versions\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gliviu/dir-compare.git"
  },
  "scripts": {
    "test": "istanbul cover tests/runTests.js"
  },
  "version": "1.4.0"
}
