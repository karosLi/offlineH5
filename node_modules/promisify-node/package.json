{
  "_args": [
    [
      {
        "raw": "promisify-node@~0.3.0",
        "scope": null,
        "escapedName": "promisify-node",
        "name": "promisify-node",
        "rawSpec": "~0.3.0",
        "spec": ">=0.3.0 <0.4.0",
        "type": "range"
      },
      "/Users/karosli/Documents/work/leke/h5code/bundle-tool/node_modules/nodegit"
    ]
  ],
  "_from": "promisify-node@>=0.3.0 <0.4.0",
  "_id": "promisify-node@0.3.0",
  "_inCache": true,
  "_location": "/promisify-node",
  "_nodeVersion": "0.12.7",
  "_npmUser": {
    "name": "johnhaley81",
    "email": "johnhaley81@gmail.com"
  },
  "_npmVersion": "2.14.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "promisify-node@~0.3.0",
    "scope": null,
    "escapedName": "promisify-node",
    "name": "promisify-node",
    "rawSpec": "~0.3.0",
    "spec": ">=0.3.0 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/nodegit"
  ],
  "_resolved": "https://registry.npmjs.org/promisify-node/-/promisify-node-0.3.0.tgz",
  "_shasum": "b4b55acf90faa7d2b8b90ca396899086c03060cf",
  "_shrinkwrap": null,
  "_spec": "promisify-node@~0.3.0",
  "_where": "/Users/karosli/Documents/work/leke/h5code/bundle-tool/node_modules/nodegit",
  "author": {
    "name": "Tim Branyen",
    "url": "@tbranyen"
  },
  "bugs": {
    "url": "https://github.com/nodegit/promisify-node/issues"
  },
  "dependencies": {
    "nodegit-promise": "~4.0.0"
  },
  "description": "Wrap Node-callback functions to return Promises.",
  "devDependencies": {
    "istanbul": "~0.2.7",
    "mocha": "~1.18.2"
  },
  "directories": {},
  "dist": {
    "shasum": "b4b55acf90faa7d2b8b90ca396899086c03060cf",
    "tarball": "https://registry.npmjs.org/promisify-node/-/promisify-node-0.3.0.tgz"
  },
  "gitHead": "193b0c4b954b3701d714b458f0e9142b4401dce3",
  "homepage": "https://github.com/nodegit/promisify-node#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "tbranyen",
      "email": "tim@tabdeveloper.com"
    },
    {
      "name": "johnhaley81",
      "email": "johnhaley81@gmail.com"
    }
  ],
  "name": "promisify-node",
  "optionalDependencies": {},
  "readme": "Promisify Node\n--------------\n\n**Stable: 0.1.5** \n\n[![Build\nStatus](https://travis-ci.org/nodegit/promisify-node.png?branch=master)](https://travis-ci.org/nodegit/promisify-node)\n\nMaintained by Tim Branyen [@tbranyen](http://twitter.com/tbranyen).\n\nWraps Node modules, functions, and methods written in the Node-callback style\nto return Promises.\n\n### Install ###\n\n``` bash\nnpm install promisify-node\n```\n\n### Examples ###\n\nWrap entire Node modules recursively:\n\n``` javascript\nvar promisify = require(\"promisify-node\");\nvar fs = promisify(\"fs\");\n\n// This function has been identified as an asynchronous function so it has\n// been automatically wrapped.\nfs.readFile(\"/etc/passwd\").then(function(contents) {\n  console.log(contents);\n});\n```\n\nWrap a single function:\n\n``` javascript\nvar promisify = require(\"promisify-node\");\n\nfunction async(callback) {\n  callback(null, true);\n}\n\n// Convert the function to return a Promise.\nvar wrap = promisify(async);\n\n// Invoke the newly wrapped function.\nwrap().then(function(value) {\n  console.log(value === true);\n});\n```\n\nWrap a method on an Object:\n\n``` javascript\nvar promisify = require(\"promisify-node\");\n\nvar myObj = {\n  myMethod: function(a, b, cb) {\n    cb(a, b);\n  }\n};\n\n// No need to return anything as the methods will be replaced on the object.\npromisify(myObj);\n\n// Intentionally cause a failure by passing an object and inspect the message.\nmyObj.myMethod({ msg: \"Failure!\" }, null).then(null, function(err) {\n  console.log(err.msg);\n});\n```\n\n### Tests ###\n\nRun the tests after installing dependencies with:\n\n``` bash\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nodegit/promisify-node.git"
  },
  "scripts": {
    "test": "istanbul cover _mocha -- test"
  },
  "version": "0.3.0"
}
